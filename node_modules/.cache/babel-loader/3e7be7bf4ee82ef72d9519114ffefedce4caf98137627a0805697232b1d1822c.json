{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdalb\\\\Desktop\\\\dramainteractive\\\\dramainteractive\\\\src\\\\pages\\\\Control.jsx\";\nimport { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Message from '../Components/Message';\nimport Sender from '../Components/Sender';\nimport { Route, Routes } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction Controls() {\n  async function broadcast() {\n    // Join a room/topic. Can be anything except for 'realtime'.\n    const channelB = supabase.channel('show', {\n      config: {\n        broadcast: {\n          self: false\n        }\n      }\n    });\n    channelB.subscribe(status => {\n      // Wait for successful connection\n      if (status !== 'SUBSCRIBED') {\n        return null;\n      }\n\n      // Send a message once the client is subscribed\n      channelB.send({\n        type: 'broadcast',\n        event: 'urlchange',\n        payload: {\n          url: './chat'\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: broadcast,\n        children: \"Broadcast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        id: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = Controls;\nexport default Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["useEffect","useState","Message","Sender","Route","Routes","createClient","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","Controls","broadcast","channelB","channel","config","self","subscribe","status","send","type","event","payload","url","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/pages/Control.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Message from '../Components/Message';\r\nimport Sender from '../Components/Sender';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\n\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction Controls() {\r\n    async function broadcast() {\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const channelB = supabase.channel('show', {\r\n            config: {\r\n                broadcast: {\r\n                    self: false,\r\n                },\r\n            },\r\n        })\r\n\r\n        channelB.subscribe((status) => {\r\n            // Wait for successful connection\r\n            if (status !== 'SUBSCRIBED') {\r\n                return null\r\n            }\r\n\r\n            // Send a message once the client is subscribed\r\n            channelB.send({\r\n                type: 'broadcast',\r\n                event: 'urlchange',\r\n                payload: { url: './chat' },\r\n            })\r\n        })\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>Controls</h1>\r\n                <button onClick={broadcast}>Broadcast</button>\r\n            </div>\r\n\r\n\r\n            <form>\r\n                <input type=\"email\" name=\"email\" id=\"email\" />\r\n                <input type=\"password\" placeholder=\"password\" name=\"password\" id=\"password\" />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\nexport default Controls;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAIhD,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACrD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,WAAW,GAAG,kNAAkN;AACtO,MAAMC,QAAQ,GAAGP,YAAY,CAACK,WAAW,EAAEC,WAAW,CAAC;AAEvD,SAASE,QAAQA,CAAA,EAAG;EAChB,eAAeC,SAASA,CAAA,EAAG;IACvB;IACA,MAAMC,QAAQ,GAAGH,QAAQ,CAACI,OAAO,CAAC,MAAM,EAAE;MACtCC,MAAM,EAAE;QACJH,SAAS,EAAE;UACPI,IAAI,EAAE;QACV;MACJ;IACJ,CAAC,CAAC;IAEFH,QAAQ,CAACI,SAAS,CAAEC,MAAM,IAAK;MAC3B;MACA,IAAIA,MAAM,KAAK,YAAY,EAAE;QACzB,OAAO,IAAI;MACf;;MAEA;MACAL,QAAQ,CAACM,IAAI,CAAC;QACVC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;UAAEC,GAAG,EAAE;QAAS;MAC7B,CAAC,CAAC;IACN,CAAC,CAAC;EAEN;EACA,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvB,OAAA;QAAQwB,OAAO,EAAEjB,SAAU;QAAAY,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAGNvB,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAOe,IAAI,EAAC,OAAO;QAACU,IAAI,EAAC,OAAO;QAACC,EAAE,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CvB,OAAA;QAAOe,IAAI,EAAC,UAAU;QAACY,WAAW,EAAC,UAAU;QAACF,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC;EAAA,eACT,CAAC;AAEX;AAACK,EAAA,GAxCQtB,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}