{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdalb\\\\Desktop\\\\dramainteractive\\\\dramainteractive\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Message from './Components/Message';\nimport Sender from './Components/Sender';\nimport { Route, Routes } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport Chat from './pages/Chat.jsx';\nimport Home from './pages/Home.jsx';\nimport Controls from './pages/Control.jsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  async function getUser() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        throw error;\n      }\n      if (data.user) {\n        setUser(data.user);\n        console.log(data.user);\n      } else {\n        setUser(null);\n        console.log(\"No user\");\n      }\n      if (document.getElementById('signinform')) {\n        document.getElementById('signinform').style.display = 'none';\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error.message);\n    }\n  }\n  useEffect(() => {\n    getUser();\n  }, []); // Run only on component mount\n\n  useEffect(() => {\n    if (!user) {\n      // REALTIME LISTENERS\n      const channelA = supabase.channel('show');\n      function messageReceived(payload) {\n        console.log(payload);\n        const url = payload.payload.url;\n        window.location.href = url;\n      }\n\n      // Subscribe to the Channel\n      channelA.on('broadcast', {\n        event: 'urlchange'\n      }, messageReceived).subscribe();\n\n      // Unsubscribe when component unmounts or user changes\n      return () => {\n        channelA.unsubscribe();\n      };\n    }\n  }, [user]); // Run whenever user changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chat\",\n        element: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/controls\",\n        element: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Message","Sender","Route","Routes","createClient","Chat","Home","Controls","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","App","_s","user","setUser","getUser","data","error","auth","console","log","document","getElementById","style","display","message","channelA","channel","messageReceived","payload","url","window","location","href","on","event","subscribe","unsubscribe","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Message from './Components/Message';\nimport Sender from './Components/Sender';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { createClient } from '@supabase/supabase-js';\nimport Chat from './pages/Chat.jsx';\nimport Home from './pages/Home.jsx';\nimport Controls from './pages/Control.jsx';\n\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  async function getUser() {\n    try {\n      const { data, error } = await supabase.auth.getUser();\n      if (error) {\n        throw error;\n      }\n      if (data.user) {\n        setUser(data.user);\n        console.log(data.user);\n      } else {\n        setUser(null);\n        console.log(\"No user\");\n      }\n      if (document.getElementById('signinform')) {\n        document.getElementById('signinform').style.display = 'none';\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error.message);\n    }\n  }\n\n  useEffect(() => {\n    getUser();\n  }, []); // Run only on component mount\n\n  useEffect(() => {\n    if (!user) {\n      // REALTIME LISTENERS\n      const channelA = supabase.channel('show');\n\n      function messageReceived(payload) {\n        console.log(payload);\n        const url = payload.payload.url;\n        window.location.href = url;\n      }\n\n      // Subscribe to the Channel\n      channelA\n        .on('broadcast', { event: 'urlchange' }, messageReceived)\n        .subscribe();\n\n      // Unsubscribe when component unmounts or user changes\n      return () => {\n        channelA.unsubscribe();\n      };\n    }\n  }, [user]); // Run whenever user changes\n\n  return (\n    <>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/chat\" element={<Chat />} />\n        <Route path=\"/controls\" element={<Controls />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}