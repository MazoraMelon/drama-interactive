{"ast":null,"code":"import{useEffect,useState}from\"react\";import\"../App.css\";import Message from'../Components/Message';import Sender from'../Components/Sender';import{Route,Routes}from'react-router-dom';import{createClient}from'@supabase/supabase-js';import ActButton from\"../Components/ActButton\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const supabaseUrl=\"https://jftaxymlbutkjoacvtbk.supabase.co\";const supabaseKey=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";const supabase=createClient(supabaseUrl,supabaseKey);function Vote(props){const[acts,setActs]=useState([]);useEffect(()=>{async function fetchActs(){const{data,error}=await supabase.from('acts').select(\"*\");if(error){console.error(\"Error fetching acts:\",error);}else{setActs(data);}}fetchActs();},[]);async function broadcastAct(name){const act=acts.find(a=>a.name===name);if(act&&act.completed){return;}// Join a room/topic. Can be anything except for 'realtime'.\nalert(\"Voted for \"+name);const channelB=supabase.channel('votes');channelB.subscribe(status=>{// Wait for successful connection\nif(status!=='SUBSCRIBED'){return null;}// Send a message once the client is subscribed\nchannelB.send({type:'broadcast',event:'vote',payload:{vote:name}});});window.location.href=\"https://mazoramelon.github.io/drama-interactive/#waiting\";}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"40px\",backgroundColor:\"#1f1f1f\",height:\"100vh\",alignItems:\"center\",height:\"100vh\",color:\"white\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{textDecoration:\"underline\"},children:\"It's up to you\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Who's story are you watching next?\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\"},children:acts.map(act=>/*#__PURE__*/_jsx(ActButton,{name:act.name,completed:act.completed,disabled:act.completed,whenclick:()=>broadcastAct(act.name)},act.id))})]})});}export default Vote;","map":{"version":3,"names":["useEffect","useState","Message","Sender","Route","Routes","createClient","ActButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","Vote","props","acts","setActs","fetchActs","data","error","from","select","console","broadcastAct","name","act","find","a","completed","alert","channelB","channel","subscribe","status","send","type","event","payload","vote","window","location","href","children","style","padding","backgroundColor","height","alignItems","color","textDecoration","display","flexDirection","map","disabled","whenclick","id"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/pages/Vote.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Message from '../Components/Message';\r\nimport Sender from '../Components/Sender';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport ActButton from \"../Components/ActButton\";\r\n\r\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction Vote(props) {\r\n    const [acts, setActs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchActs() {\r\n            const { data, error } = await supabase.from('acts').select(\"*\");\r\n            if (error) {\r\n                console.error(\"Error fetching acts:\", error);\r\n            } else {\r\n                setActs(data);\r\n            }\r\n        }\r\n        fetchActs();\r\n    }, []);\r\n\r\n    async function broadcastAct(name) {\r\n        const act = acts.find(a => a.name === name)\r\n        if (act && act.completed) {\r\n            return\r\n        }\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        alert(\"Voted for \" + name)\r\n        const channelB = supabase.channel('votes')\r\n\r\n        channelB.subscribe((status) => {\r\n            // Wait for successful connection\r\n            if (status !== 'SUBSCRIBED') {\r\n                return null\r\n            }\r\n\r\n            // Send a message once the client is subscribed\r\n            channelB.send({\r\n                type: 'broadcast',\r\n                event: 'vote',\r\n                payload: { vote: name },\r\n            })\r\n        })\r\n        window.location.href = \"https://mazoramelon.github.io/drama-interactive/#waiting\";\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                padding: \"40px\",\r\n                backgroundColor: \"#1f1f1f\",\r\n                height: \"100vh\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                color: \"white\",\r\n            }}>\r\n                <h1 style={{\r\n                    textDecoration: \"underline\",\r\n                }}>It's up to you</h1>\r\n                <h3>Who's story are you watching next?</h3>\r\n\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                }}>\r\n                    {acts.map((act) => (\r\n                        <ActButton key={act.id} name={act.name} completed={act.completed} disabled={act.completed} whenclick={() => broadcastAct(act.name)} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Vote;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}