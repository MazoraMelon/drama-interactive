{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdalb\\\\Desktop\\\\dramainteractive\\\\dramainteractive\\\\src\\\\pages\\\\Control.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Message from '../Components/Message';\nimport Sender from '../Components/Sender';\nimport { Route, Routes } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction Controls() {\n  _s();\n  let domain = \"http://localhost:3000/\";\n  // domain = \"https://mazoramelon.github.io/drama-interactive/\";\n  const pagesMap = new Map([[\"Home\", `${domain}`], [\"Chat\", `${domain}#chat`], [\"Vote\", `${domain}#vote`], [\"Running\", `${domain}#running`], [\"Lost\", `${domain}#lost`]]);\n\n  // Iterate over the pages map and create buttons\n  async function prepareButtons() {\n    const container = document.getElementById(\"broadcastButtons\");\n    container.innerHTML = '';\n    for (const [page, url] of pagesMap) {\n      // Create a button element\n      const button = document.createElement(\"button\");\n      // Set the button's text to the page name\n      button.textContent = page;\n\n      // Add a class to the button\n      button.classList.add(\"broadcastButton\");\n      // Set the button's onclick function to navigate to the corresponding URL\n      button.onclick = function () {\n        broadcastfromButton(url);\n      };\n      // Append the button to the container\n      container.appendChild(button);\n    }\n  }\n  window.addEventListener('load', prepareButtons);\n  async function signIn(e) {\n    e.preventDefault();\n    const {\n      user,\n      error\n    } = await supabase.auth.signInWithPassword({\n      email: document.getElementById('email').value,\n      password: document.getElementById('password').value\n    });\n    console.log(user, error);\n    localStorage.setItem('controller', 'true');\n  }\n  async function broadcasturl() {\n    // Join a room/topic. Can be anything except for 'realtime'.\n    const nexturl = document.getElementById('url').value;\n    //Set the current page in supabase\n    const {\n      data,\n      error\n    } = await supabase.from('controller').update({\n      currentURL: nexturl\n    }).eq('id', 1);\n    if (error) {\n      alert(error);\n    }\n  }\n  async function broadcastfromButton(url) {\n    // Join a room/topic. Can be anything except for 'realtime'.\n    const nexturl = url;\n    //Set the current page in supabase\n    const {\n      data,\n      error\n    } = await supabase.from('controller').update({\n      currentURL: nexturl\n    }).eq('id', 1);\n    if (error) {\n      alert(error);\n    }\n  }\n  async function actorMessage(e, messageParam) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (messageParam) {\n      var message = messageParam;\n    } else {\n      var message = document.getElementById('message').value;\n    }\n\n    // Join a room/topic. Can be anything except for 'realtime'.\n    const channelB = supabase.channel('actorMessage');\n    channelB.subscribe(status => {\n      // Wait for successful connection\n      if (status !== 'SUBSCRIBED') {\n        return null;\n      }\n\n      // Send a message once the client is subscribed\n      channelB.send({\n        type: 'broadcast',\n        event: 'actorMessage',\n        payload: {\n          message: message\n        }\n      });\n    });\n  }\n  useEffect(() => {\n    async function changeChat(canChatTickbox) {\n      const {\n        data,\n        error\n      } = await supabase.from('controller').update({\n        audienceChat: canChatTickbox\n      }).eq('id', 1);\n      if (error) {\n        alert(error);\n      }\n    }\n    document.getElementById('canChat').addEventListener('change', e => {\n      const canChatTickbox = e.target.checked;\n      changeChat(canChatTickbox);\n    });\n  });\n  let data = [{}];\n  useEffect(() => {\n    async function getActs() {\n      const {\n        data,\n        error\n      } = await supabase.from('acts').select('*');\n      console.log(data);\n      if (error) {\n        console.error(\"Error fetching acts:\", error);\n      }\n      let div = document.getElementById(\"votes\");\n      div.innerHTML = \"\";\n      const broadcastButtons = document.getElementById(\"broadcastButtons\");\n      data.forEach(act => {\n        if (act.completed === true) {\n          // Only make buttons for completed acts\n          return;\n        }\n        const header = document.createElement(\"h1\");\n        header.textContent = `${act.name} 0`;\n        header.id = act.name;\n        header.style = \"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";\n        div.appendChild(header);\n\n        // Make the buttons for broadcasting the story url\n        const button = document.createElement(\"button\");\n        button.textContent = `Broadcast ${act.name}`;\n        const oldButton = document.getElementById(`${act.name}`);\n        if (oldButton) {\n          oldButton.remove();\n        }\n        button.classList.add(\"broadcastButton\");\n        button.id = `${act.name}`;\n        button.style = \"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";\n        button.onclick = function () {\n          broadcastfromButton(`${domain}#story/${act.name}`);\n          actorMessage(null, `The life of ${act.name}`);\n          supabase.from('acts').update({\n            completed: true\n          }).match({\n            name: act.name\n          }).then(() => {\n            console.log(`Updated act ${act.name} to completed`);\n            window.location.reload();\n          });\n        };\n        broadcastButtons.appendChild(button);\n      });\n    }\n    getActs();\n  }, []);\n  window.onload = function () {\n    const resetButton = document.createElement(\"button\");\n    resetButton.textContent = \"Reset Acts\";\n    resetButton.onclick = resetActs;\n    document.getElementById(\"resetButtonLocation\").appendChild(resetButton);\n  };\n  function resetActs() {\n    const confirmed = window.confirm(\"Are you sure you want to reset all completed acts?\");\n    if (confirmed) {\n      const {\n        data,\n        error\n      } = supabase.from('acts').update({\n        completed: false\n      });\n      if (error) {\n        console.error(\"Error resetting acts:\", error);\n      } else {\n        window.location.reload();\n      }\n    }\n  }\n  useEffect(() => {\n    const voteChannel = supabase.channel('votes');\n    function messageReceived(payload) {\n      const vote = payload.payload.vote;\n      const div = document.getElementById(vote);\n      let count = parseInt(div.textContent.split(\" \")[1]) || 0;\n      count++;\n      div.textContent = `${vote} ${count}`;\n    }\n    voteChannel.on('broadcast', {\n      event: 'vote'\n    }, payload => messageReceived(payload)).subscribe();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#1f1f1f\",\n        color: \"white\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#1f1f1f\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          border: \"2px solid #424242\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"fit-content\",\n          alignSelf: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"white\"\n          },\n          children: \"URL Director\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"url\",\n          type: \"text\",\n          placeholder: \"URL\",\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#1f1f1f\",\n            color: \"white\",\n            borderRadius: \"10px\",\n            border: \"2px solid #424242\",\n            outline: \"none\",\n            fontSize: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: broadcasturl,\n          style: {\n            padding: \"10px\",\n            backgroundColor: \"#1f1f1f\",\n            color: \"white\",\n            borderRadius: \"10px\",\n            border: \"none\",\n            fontSize: \"20px\",\n            marginBottom: \"20px\",\n            border: \"2px solid #424242\",\n            marginTop: \"20px\",\n            cursor: \"pointer\",\n            width: \"200px\",\n            alignSelf: \"center\"\n          },\n          children: \"Broadcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"broadcastButtons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"resetButtonLocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"message\",\n        type: \"text\",\n        placeholder: \"ActorMessage\",\n        autoComplete: \"off\",\n        style: {\n          padding: \"10px\",\n          backgroundColor: \"#1f1f1f\",\n          color: \"white\",\n          borderRadius: \"10px\",\n          border: \"2px solid #424242\",\n          outline: \"none\",\n          fontSize: \"20px\",\n          marginBottom: \"20px\",\n          width: \"300px\",\n          alignSelf: \"center\"\n        },\n        onSubmit: actorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          alignSelf: \"center\",\n          marginBottom: \"10px\",\n          color: \"orangered\"\n        },\n        children: \"Must be signed in on board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: \"10px\",\n          backgroundColor: \"#1f1f1f\",\n          color: \"white\",\n          borderRadius: \"10px\",\n          width: \"fit-content\",\n          fontSize: \"20px\",\n          marginBottom: \"20px\",\n          border: \"2px solid #424242\",\n          marginTop: \"0px\",\n          cursor: \"pointer\",\n          alignSelf: \"center\"\n        },\n        onClick: actorMessage,\n        children: \"Send Board Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"canChat\",\n        children: \"Can Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"canChat\",\n        style: {\n          display: \"flex\",\n          width: \"3vw\",\n          height: \"3vh\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"signinform\",\n        onSubmit: e => {\n          signIn(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"You must be signed in to not change page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          id: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 87\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          id: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 99\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"none\",\n          width: \"200px\",\n          border: \"2px solid #424242\",\n          borderRadius: \"10px\",\n          backgroundColor: \"#1f1f1f\",\n          color: \"white\",\n          height: \"50px\"\n        },\n        id: \"signout\",\n        onClick: () => {\n          supabase.auth.signOut();\n        },\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"votes\",\n        style: {\n          position: 'absolute',\n          top: '10',\n          marginTop: '60px',\n          width: '100vw',\n          display: 'flex',\n          float: 'left',\n          width: 'fit-content',\n          flexDirection: 'column',\n          alignItems: 'center',\n          color: 'darkgrey'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Controls, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n_c = Controls;\nexport default Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["useEffect","useState","Message","Sender","Route","Routes","createClient","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","Controls","_s","domain","pagesMap","Map","prepareButtons","container","document","getElementById","innerHTML","page","url","button","createElement","textContent","classList","add","onclick","broadcastfromButton","appendChild","window","addEventListener","signIn","e","preventDefault","user","error","auth","signInWithPassword","email","value","password","console","log","localStorage","setItem","broadcasturl","nexturl","data","from","update","currentURL","eq","alert","actorMessage","messageParam","message","channelB","channel","subscribe","status","send","type","event","payload","changeChat","canChatTickbox","audienceChat","target","checked","getActs","select","div","broadcastButtons","forEach","act","completed","header","name","id","style","oldButton","remove","match","then","location","reload","onload","resetButton","resetActs","confirmed","confirm","voteChannel","messageReceived","vote","count","parseInt","split","on","children","backgroundColor","color","height","display","flexDirection","width","fileName","_jsxFileName","lineNumber","columnNumber","padding","borderRadius","border","alignItems","alignSelf","placeholder","outline","fontSize","onClick","marginBottom","marginTop","cursor","autoComplete","onSubmit","for","signOut","position","top","float","_c","$RefreshReg$"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/pages/Control.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Message from '../Components/Message';\r\nimport Sender from '../Components/Sender';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\n\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction Controls() {\r\n\r\n    let domain = \"http://localhost:3000/\";\r\n    // domain = \"https://mazoramelon.github.io/drama-interactive/\";\r\n    const pagesMap = new Map([\r\n        [\"Home\", `${domain}`],\r\n        [\"Chat\", `${domain}#chat`],\r\n        [\"Vote\", `${domain}#vote`],\r\n        [\"Running\", `${domain}#running`],\r\n        [\"Lost\", `${domain}#lost`],\r\n    ]);\r\n\r\n    // Iterate over the pages map and create buttons\r\n    async function prepareButtons() {\r\n        const container = document.getElementById(\"broadcastButtons\");\r\n        container.innerHTML = '';\r\n        for (const [page, url] of pagesMap) {\r\n            // Create a button element\r\n            const button = document.createElement(\"button\");\r\n            // Set the button's text to the page name\r\n            button.textContent = page;\r\n\r\n            // Add a class to the button\r\n            button.classList.add(\"broadcastButton\");\r\n            // Set the button's onclick function to navigate to the corresponding URL\r\n            button.onclick = function () {\r\n                broadcastfromButton(url);\r\n            };\r\n            // Append the button to the container\r\n            container.appendChild(button);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('load', prepareButtons);\r\n\r\n\r\n\r\n    async function signIn(e) {\r\n        e.preventDefault()\r\n        const { user, error } = await supabase.auth.signInWithPassword({\r\n            email: document.getElementById('email').value,\r\n            password: document.getElementById('password').value\r\n        })\r\n        console.log(user, error)\r\n        localStorage.setItem('controller', 'true');\r\n    }\r\n    async function broadcasturl() {\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const nexturl = document.getElementById('url').value\r\n        //Set the current page in supabase\r\n        const { data, error } = await supabase\r\n            .from('controller')\r\n            .update({ currentURL: nexturl })\r\n            .eq('id', 1)\r\n        if (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    async function broadcastfromButton(url) {\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const nexturl = url\r\n        //Set the current page in supabase\r\n        const { data, error } = await supabase\r\n            .from('controller')\r\n            .update({ currentURL: nexturl })\r\n            .eq('id', 1)\r\n        if (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function actorMessage(e, messageParam) {\r\n        if (e) {\r\n            e.preventDefault()\r\n        }\r\n        if (messageParam) {\r\n            var message = messageParam\r\n        } else {\r\n            var message = document.getElementById('message').value\r\n        }\r\n\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const channelB = supabase.channel('actorMessage')\r\n\r\n        channelB.subscribe((status) => {\r\n            // Wait for successful connection\r\n            if (status !== 'SUBSCRIBED') {\r\n                return null\r\n            }\r\n\r\n            // Send a message once the client is subscribed\r\n            channelB.send({\r\n                type: 'broadcast',\r\n                event: 'actorMessage',\r\n                payload: { message: message },\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        async function changeChat(canChatTickbox) {\r\n            const { data, error } = await supabase\r\n                .from('controller')\r\n                .update({ audienceChat: canChatTickbox })\r\n                .eq('id', 1)\r\n            if (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n        document.getElementById('canChat').addEventListener('change', (e) => {\r\n            const canChatTickbox = e.target.checked\r\n            changeChat(canChatTickbox)\r\n        })\r\n    })\r\n\r\n\r\n    let data = [{}]\r\n    useEffect(() => {\r\n        async function getActs() {\r\n            const { data, error } = await supabase\r\n                .from('acts')\r\n                .select('*')\r\n\r\n            console.log(data)\r\n            if (error) {\r\n                console.error(\"Error fetching acts:\", error);\r\n            }\r\n            let div = document.getElementById(\"votes\");\r\n            div.innerHTML = \"\";\r\n            const broadcastButtons = document.getElementById(\"broadcastButtons\");\r\n            data.forEach((act) => {\r\n\r\n                if (act.completed === true) { // Only make buttons for completed acts\r\n                    return\r\n                }\r\n                const header = document.createElement(\"h1\");\r\n                header.textContent = `${act.name} 0`;\r\n                header.id = act.name;\r\n                header.style = \"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";\r\n                div.appendChild(header);\r\n\r\n\r\n                // Make the buttons for broadcasting the story url\r\n                const button = document.createElement(\"button\");\r\n                button.textContent = `Broadcast ${act.name}`;\r\n                const oldButton = document.getElementById(`${act.name}`);\r\n                if (oldButton) {\r\n                    oldButton.remove();\r\n                }\r\n                button.classList.add(\"broadcastButton\");\r\n                button.id = `${act.name}`;\r\n                button.style = \"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";\r\n                button.onclick = function () {\r\n                    broadcastfromButton(`${domain}#story/${act.name}`);\r\n                    actorMessage(null, `The life of ${act.name}`);\r\n\r\n                    supabase.from('acts').update({ completed: true }).match({ name: act.name }).then(() => {\r\n                        console.log(`Updated act ${act.name} to completed`);\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n                broadcastButtons.appendChild(button);\r\n\r\n            })\r\n        }\r\n        getActs()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    window.onload = function () {\r\n        const resetButton = document.createElement(\"button\");\r\n        resetButton.textContent = \"Reset Acts\";\r\n        resetButton.onclick = resetActs;\r\n        document.getElementById(\"resetButtonLocation\").appendChild(resetButton);\r\n    }\r\n\r\n    function resetActs() {\r\n        const confirmed = window.confirm(\"Are you sure you want to reset all completed acts?\");\r\n        if (confirmed) {\r\n            const { data, error } = supabase\r\n                .from('acts')\r\n                .update({ completed: false })\r\n\r\n            if (error) {\r\n                console.error(\"Error resetting acts:\", error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const voteChannel = supabase.channel('votes')\r\n\r\n        function messageReceived(payload) {\r\n            const vote = payload.payload.vote;\r\n            const div = document.getElementById(vote);\r\n            let count = parseInt(div.textContent.split(\" \")[1]) || 0;\r\n            count++;\r\n            div.textContent = `${vote} ${count}`;\r\n        }\r\n\r\n        voteChannel\r\n            .on(\r\n                'broadcast',\r\n                { event: 'vote' },\r\n                (payload) => messageReceived(payload)\r\n            )\r\n            .subscribe()\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                backgroundColor: \"#1f1f1f\",\r\n                color: \"white\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"100vw\",\r\n            }}>\r\n                <h1>Controls</h1>\r\n                <div style={{\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"10px\",\r\n                    border: \"2px solid #424242\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    width: \"fit-content\",\r\n                    alignSelf: \"center\",\r\n                }}>\r\n                    <h2 style={{\r\n                        color: \"white\",\r\n                    }}>URL Director</h2>\r\n                    <input id=\"url\" type=\"text\" placeholder=\"URL\" style={{\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#1f1f1f\",\r\n                        color: \"white\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"2px solid #424242\",\r\n                        outline: \"none\",\r\n                        fontSize: \"20px\",\r\n                    }}></input><br />\r\n                    <button onClick={broadcasturl} style={{\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#1f1f1f\",\r\n                        color: \"white\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"none\",\r\n                        fontSize: \"20px\",\r\n                        marginBottom: \"20px\",\r\n                        border: \"2px solid #424242\",\r\n                        marginTop: \"20px\",\r\n                        cursor: \"pointer\",\r\n                        width: \"200px\",\r\n                        alignSelf: \"center\",\r\n                    }}>Broadcast</button>\r\n\r\n\r\n\r\n                    <div id=\"broadcastButtons\">\r\n                    </div>\r\n\r\n                </div>\r\n                <div id=\"resetButtonLocation\"></div>\r\n\r\n                <br />\r\n                <input id=\"message\" type=\"text\" placeholder=\"ActorMessage\" autoComplete=\"off\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    borderRadius: \"10px\",\r\n                    border: \"2px solid #424242\",\r\n                    outline: \"none\",\r\n                    fontSize: \"20px\",\r\n                    marginBottom: \"20px\",\r\n                    width: \"300px\",\r\n                    alignSelf: \"center\",\r\n                }} onSubmit={actorMessage} /><label style={{\r\n                    alignSelf: \"center\",\r\n                    marginBottom: \"10px\",\r\n                    color: \"orangered\",\r\n                }}>Must be signed in on board</label><button style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    borderRadius: \"10px\",\r\n                    width: \"fit-content\",\r\n                    fontSize: \"20px\",\r\n                    marginBottom: \"20px\",\r\n                    border: \"2px solid #424242\",\r\n                    marginTop: \"0px\",\r\n                    cursor: \"pointer\",\r\n                    alignSelf: \"center\",\r\n                }} onClick={actorMessage}>Send Board Message</button>\r\n\r\n                <label for=\"canChat\">Can Chat</label><input type=\"checkbox\" id=\"canChat\" style={{\r\n                    display: \"flex\",\r\n                    width: \"3vw\",\r\n                    height: \"3vh\",\r\n                }} /><br />\r\n\r\n\r\n                <form id=\"signinform\" onSubmit={(e) => { signIn(e) }}>\r\n                    <h2 style={\r\n                        {\r\n                            color: \"red\",\r\n                        }\r\n                    }>You must be signed in to not change page</h2>\r\n                    <input type=\"email\" placeholder=\"Email\" name=\"email\" id=\"email\" /><br />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\" /><br />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <button style={{\r\n                    display: \"none\",\r\n                    width: \"200px\",\r\n                    border: \"2px solid #424242\",\r\n                    borderRadius: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    height: \"50px\",\r\n                }} id=\"signout\" onClick={() => { supabase.auth.signOut() }}>Sign out</button>\r\n\r\n                <div id=\"votes\" style={{\r\n                    position: 'absolute',\r\n                    top: '10',\r\n                    marginTop: '60px',\r\n                    width: '100vw',\r\n                    display: 'flex',\r\n                    float: 'left',\r\n                    width: 'fit-content',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    color: 'darkgrey',\r\n                }}>\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\nexport default Controls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}