{"ast":null,"code":"import{useEffect,useState}from\"react\";import\"../App.css\";import Message from'../Components/Message';import Sender from'../Components/Sender';import{Route,Routes}from'react-router-dom';import{createClient}from'@supabase/supabase-js';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const supabaseUrl=\"https://jftaxymlbutkjoacvtbk.supabase.co\";const supabaseKey=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";const supabase=createClient(supabaseUrl,supabaseKey);function Controls(){let domain=\"http://localhost:3000/\";// let domain = \"https://mazoramelon.github.io/drama-interactive/\";\nconst pagesMap=new Map([[\"Home\",\"\".concat(domain)],[\"Chat\",\"\".concat(domain,\"#chat\")],[\"Vote\",\"\".concat(domain,\"#vote\")],[\"Running\",\"\".concat(domain,\"#running\")],[\"Lost\",\"\".concat(domain,\"#lost\")]]);// Iterate over the pages map and create buttons\nasync function prepareButtons(){const container=document.getElementById(\"broadcastButtons\");container.innerHTML='';for(const[page,url]of pagesMap){// Create a button element\nconst button=document.createElement(\"button\");// Set the button's text to the page name\nbutton.textContent=page;// Add a class to the button\nbutton.classList.add(\"broadcastButton\");// Set the button's onclick function to navigate to the corresponding URL\nbutton.onclick=function(){broadcastfromButton(url);};// Append the button to the container\ncontainer.appendChild(button);}}window.addEventListener('load',prepareButtons);async function signIn(e){e.preventDefault();const{user,error}=await supabase.auth.signInWithPassword({email:document.getElementById('email').value,password:document.getElementById('password').value});console.log(user,error);localStorage.setItem('controller','true');}async function broadcasturl(){// Join a room/topic. Can be anything except for 'realtime'.\nconst nexturl=document.getElementById('url').value;//Set the current page in supabase\nconst{data,error}=await supabase.from('controller').update({currentURL:nexturl}).eq('id',1);if(error){alert(error);}}async function broadcastfromButton(url){const confirmed=window.confirm(\"Are you sure you want to change the page to \".concat(url,\"?\"));if(!confirmed){return;}// Join a room/topic. Can be anything except for 'realtime'.\nconst nexturl=url;//Set the current page in supabase\nconst{data,error}=await supabase.from('controller').update({currentURL:nexturl}).eq('id',1);if(error){alert(error);}}async function actorMessage(e,messageParam){if(e){e.preventDefault();}if(messageParam){var message=messageParam;}else{var message=document.getElementById('message').value;}// Join a room/topic. Can be anything except for 'realtime'.\nconst channelB=supabase.channel('actorMessage');channelB.subscribe(status=>{// Wait for successful connection\nif(status!=='SUBSCRIBED'){return null;}// Send a message once the client is subscribed\nchannelB.send({type:'broadcast',event:'actorMessage',payload:{message:message}});});}useEffect(()=>{async function changeChat(canChatTickbox){const{data,error}=await supabase.from('controller').update({audienceChat:canChatTickbox}).eq('id',1);if(error){alert(error);}}document.getElementById('canChat').addEventListener('change',e=>{const canChatTickbox=e.target.checked;changeChat(canChatTickbox);});});let data=[{}];useEffect(()=>{async function getActs(){const{data,error}=await supabase.from('acts').select('*');console.log(data);if(error){console.error(\"Error fetching acts:\",error);}let div=document.getElementById(\"votes\");div.innerHTML=\"\";const broadcastButtons=document.getElementById(\"broadcastButtons\");data.forEach(act=>{if(act.completed===true){// Only make buttons for completed acts\nreturn;}// Make the buttons for broadcasting the story url\nconst button=document.createElement(\"button\");button.textContent=\"Broadcast \".concat(act.name);const oldButton=document.getElementById(\"\".concat(act.name));if(oldButton){oldButton.remove();}button.classList.add(\"broadcastButton\");button.id=\"\".concat(act.name);button.style=\"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";button.onclick=function(){const confirmed=window.confirm(\"Are you sure you want to change to \".concat(act.name,\"?\"));if(confirmed){broadcastfromButton(\"\".concat(domain,\"#story/\").concat(act.name));actorMessage(null,\"The life of \".concat(act.name));supabase.from('acts').update({completed:true}).match({name:act.name}).then(()=>{console.log(\"Updated act \".concat(act.name,\" to completed\"));window.location.reload();});}};broadcastButtons.appendChild(button);});}getActs();},[]);window.onload=function(){const resetButton=document.createElement(\"button\");resetButton.textContent=\"Reset Acts\";resetButton.onclick=resetActs;document.getElementById(\"resetButtonLocation\").appendChild(resetButton);};async function resetActs(){const confirmedReset=window.confirm(\"Are you sure you want to reset all completed acts?\");console.log(confirmedReset);if(confirmedReset==true){const{data,error}=await supabase.from('acts').update({completed:false}).eq('completed',true).select('*');if(error){console.error(\"Error resetting acts:\",error);}else{window.location.reload();}}}useEffect(()=>{const voteChannel=supabase.channel('votes');function messageReceived(payload){const vote=payload.payload.vote;const div=document.getElementById(vote);let count=parseInt(div.textContent.split(\" \")[1])||0;count++;div.textContent=\"\".concat(vote,\" \").concat(count);}voteChannel.on('broadcast',{event:'vote'},payload=>messageReceived(payload)).subscribe();});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:\"#1f1f1f\",color:\"white\",height:\"100vh\",display:\"flex\",flexDirection:\"column\",width:\"100vw\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Controls\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:\"#1f1f1f\",padding:\"20px\",borderRadius:\"10px\",border:\"2px solid #424242\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"fit-content\",alignSelf:\"center\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:\"white\"},children:\"URL Director\"}),/*#__PURE__*/_jsx(\"input\",{id:\"url\",type:\"text\",placeholder:\"URL\",style:{padding:\"10px\",backgroundColor:\"#1f1f1f\",color:\"white\",borderRadius:\"10px\",border:\"2px solid #424242\",outline:\"none\",fontSize:\"20px\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:broadcasturl,style:{padding:\"10px\",backgroundColor:\"#1f1f1f\",color:\"white\",borderRadius:\"10px\",border:\"none\",fontSize:\"20px\",marginBottom:\"20px\",border:\"2px solid #424242\",marginTop:\"20px\",cursor:\"pointer\",width:\"200px\",alignSelf:\"center\"},children:\"Broadcast\"}),/*#__PURE__*/_jsx(\"div\",{id:\"broadcastButtons\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"resetButtonLocation\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{id:\"message\",type:\"text\",placeholder:\"ActorMessage\",autoComplete:\"off\",style:{padding:\"10px\",backgroundColor:\"#1f1f1f\",color:\"white\",borderRadius:\"10px\",border:\"2px solid #424242\",outline:\"none\",fontSize:\"20px\",marginBottom:\"20px\",width:\"300px\",alignSelf:\"center\"},onSubmit:actorMessage}),/*#__PURE__*/_jsx(\"label\",{style:{alignSelf:\"center\",marginBottom:\"10px\",color:\"orangered\"},children:\"Must be signed in on board\"}),/*#__PURE__*/_jsx(\"button\",{style:{padding:\"10px\",backgroundColor:\"#1f1f1f\",color:\"white\",borderRadius:\"10px\",width:\"fit-content\",fontSize:\"20px\",marginBottom:\"20px\",border:\"2px solid #424242\",marginTop:\"0px\",cursor:\"pointer\",alignSelf:\"center\"},onClick:actorMessage,children:\"Send Board Message\"}),/*#__PURE__*/_jsx(\"label\",{for:\"canChat\",children:\"Can Chat\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"canChat\",style:{display:\"flex\",width:\"3vw\",height:\"3vh\"}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"form\",{id:\"signinform\",onSubmit:e=>{signIn(e);},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:\"red\"},children:\"You must be signed in to not change page\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",id:\"email\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",id:\"password\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Submit\"})]}),/*#__PURE__*/_jsx(\"button\",{style:{display:\"none\",width:\"200px\",border:\"2px solid #424242\",borderRadius:\"10px\",backgroundColor:\"#1f1f1f\",color:\"white\",height:\"50px\"},id:\"signout\",onClick:()=>{supabase.auth.signOut();},children:\"Sign out\"}),/*#__PURE__*/_jsx(\"div\",{id:\"votes\",style:{position:'absolute',top:'10',marginTop:'60px',width:'100vw',display:'flex',float:'left',width:'fit-content',flexDirection:'column',alignItems:'center',color:'darkgrey'}})]})});}export default Controls;","map":{"version":3,"names":["useEffect","useState","Message","Sender","Route","Routes","createClient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","Controls","domain","pagesMap","Map","concat","prepareButtons","container","document","getElementById","innerHTML","page","url","button","createElement","textContent","classList","add","onclick","broadcastfromButton","appendChild","window","addEventListener","signIn","e","preventDefault","user","error","auth","signInWithPassword","email","value","password","console","log","localStorage","setItem","broadcasturl","nexturl","data","from","update","currentURL","eq","alert","confirmed","confirm","actorMessage","messageParam","message","channelB","channel","subscribe","status","send","type","event","payload","changeChat","canChatTickbox","audienceChat","target","checked","getActs","select","div","broadcastButtons","forEach","act","completed","name","oldButton","remove","id","style","match","then","location","reload","onload","resetButton","resetActs","confirmedReset","voteChannel","messageReceived","vote","count","parseInt","split","on","children","backgroundColor","color","height","display","flexDirection","width","padding","borderRadius","border","alignItems","alignSelf","placeholder","outline","fontSize","onClick","marginBottom","marginTop","cursor","autoComplete","onSubmit","for","signOut","position","top","float"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/pages/Control.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Message from '../Components/Message';\r\nimport Sender from '../Components/Sender';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\n\r\n\r\nimport { createClient } from '@supabase/supabase-js';\r\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction Controls() {\r\n\r\n    let domain = \"http://localhost:3000/\";\r\n    // let domain = \"https://mazoramelon.github.io/drama-interactive/\";\r\n    const pagesMap = new Map([\r\n        [\"Home\", `${domain}`],\r\n        [\"Chat\", `${domain}#chat`],\r\n        [\"Vote\", `${domain}#vote`],\r\n        [\"Running\", `${domain}#running`],\r\n        [\"Lost\", `${domain}#lost`],\r\n    ]);\r\n\r\n    // Iterate over the pages map and create buttons\r\n    async function prepareButtons() {\r\n        const container = document.getElementById(\"broadcastButtons\");\r\n        container.innerHTML = '';\r\n        for (const [page, url] of pagesMap) {\r\n            // Create a button element\r\n            const button = document.createElement(\"button\");\r\n            // Set the button's text to the page name\r\n            button.textContent = page;\r\n\r\n            // Add a class to the button\r\n            button.classList.add(\"broadcastButton\");\r\n            // Set the button's onclick function to navigate to the corresponding URL\r\n            button.onclick = function () {\r\n                broadcastfromButton(url);\r\n            };\r\n            // Append the button to the container\r\n            container.appendChild(button);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('load', prepareButtons);\r\n\r\n\r\n\r\n    async function signIn(e) {\r\n        e.preventDefault()\r\n        const { user, error } = await supabase.auth.signInWithPassword({\r\n            email: document.getElementById('email').value,\r\n            password: document.getElementById('password').value\r\n        })\r\n        console.log(user, error)\r\n        localStorage.setItem('controller', 'true');\r\n    }\r\n    async function broadcasturl() {\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const nexturl = document.getElementById('url').value\r\n        //Set the current page in supabase\r\n        const { data, error } = await supabase\r\n            .from('controller')\r\n            .update({ currentURL: nexturl })\r\n            .eq('id', 1)\r\n        if (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    async function broadcastfromButton(url) {\r\n        const confirmed = window.confirm(`Are you sure you want to change the page to ${url}?`);\r\n        if (!confirmed) {\r\n            return;\r\n        }\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const nexturl = url\r\n        //Set the current page in supabase\r\n        const { data, error } = await supabase\r\n            .from('controller')\r\n            .update({ currentURL: nexturl })\r\n            .eq('id', 1)\r\n        if (error) {\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async function actorMessage(e, messageParam) {\r\n        if (e) {\r\n            e.preventDefault()\r\n        }\r\n        if (messageParam) {\r\n            var message = messageParam\r\n        } else {\r\n            var message = document.getElementById('message').value\r\n        }\r\n\r\n        // Join a room/topic. Can be anything except for 'realtime'.\r\n        const channelB = supabase.channel('actorMessage')\r\n\r\n        channelB.subscribe((status) => {\r\n            // Wait for successful connection\r\n            if (status !== 'SUBSCRIBED') {\r\n                return null\r\n            }\r\n\r\n            // Send a message once the client is subscribed\r\n            channelB.send({\r\n                type: 'broadcast',\r\n                event: 'actorMessage',\r\n                payload: { message: message },\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n\r\n        async function changeChat(canChatTickbox) {\r\n            const { data, error } = await supabase\r\n                .from('controller')\r\n                .update({ audienceChat: canChatTickbox })\r\n                .eq('id', 1)\r\n            if (error) {\r\n                alert(error)\r\n            }\r\n        }\r\n        document.getElementById('canChat').addEventListener('change', (e) => {\r\n            const canChatTickbox = e.target.checked\r\n            changeChat(canChatTickbox)\r\n        })\r\n    })\r\n\r\n\r\n    let data = [{}]\r\n    useEffect(() => {\r\n        async function getActs() {\r\n            const { data, error } = await supabase\r\n                .from('acts')\r\n                .select('*')\r\n\r\n            console.log(data)\r\n            if (error) {\r\n                console.error(\"Error fetching acts:\", error);\r\n            }\r\n            let div = document.getElementById(\"votes\");\r\n            div.innerHTML = \"\";\r\n            const broadcastButtons = document.getElementById(\"broadcastButtons\");\r\n            data.forEach((act) => {\r\n\r\n                if (act.completed === true) { // Only make buttons for completed acts\r\n                    return\r\n                }\r\n\r\n\r\n                // Make the buttons for broadcasting the story url\r\n                const button = document.createElement(\"button\");\r\n                button.textContent = `Broadcast ${act.name}`;\r\n                const oldButton = document.getElementById(`${act.name}`);\r\n                if (oldButton) {\r\n                    oldButton.remove();\r\n                }\r\n                button.classList.add(\"broadcastButton\");\r\n                button.id = `${act.name}`;\r\n                button.style = \"display: flex; flex-direction: column; top: 0; left: 0; width: fit-content; color: darkgrey;\";\r\n                button.onclick = function () {\r\n                    const confirmed = window.confirm(`Are you sure you want to change to ${act.name}?`);\r\n                    if (confirmed) {\r\n                        broadcastfromButton(`${domain}#story/${act.name}`);\r\n                        actorMessage(null, `The life of ${act.name}`);\r\n\r\n                        supabase.from('acts').update({ completed: true }).match({ name: act.name }).then(() => {\r\n                            console.log(`Updated act ${act.name} to completed`);\r\n                            window.location.reload();\r\n                        });\r\n                    }\r\n\r\n                }\r\n                broadcastButtons.appendChild(button);\r\n\r\n            })\r\n        }\r\n        getActs()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    window.onload = function () {\r\n        const resetButton = document.createElement(\"button\");\r\n        resetButton.textContent = \"Reset Acts\";\r\n        resetButton.onclick = resetActs;\r\n        document.getElementById(\"resetButtonLocation\").appendChild(resetButton);\r\n    }\r\n\r\n    async function resetActs() {\r\n        const confirmedReset = window.confirm(\"Are you sure you want to reset all completed acts?\");\r\n        console.log(confirmedReset);\r\n        if (confirmedReset == true) {\r\n            const { data, error } = await supabase\r\n                .from('acts')\r\n                .update({ completed: false })\r\n                .eq('completed', true)\r\n                .select('*')\r\n\r\n            if (error) {\r\n                console.error(\"Error resetting acts:\", error);\r\n            } else {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const voteChannel = supabase.channel('votes')\r\n\r\n        function messageReceived(payload) {\r\n            const vote = payload.payload.vote;\r\n            const div = document.getElementById(vote);\r\n            let count = parseInt(div.textContent.split(\" \")[1]) || 0;\r\n            count++;\r\n            div.textContent = `${vote} ${count}`;\r\n        }\r\n\r\n        voteChannel\r\n            .on(\r\n                'broadcast',\r\n                { event: 'vote' },\r\n                (payload) => messageReceived(payload)\r\n            )\r\n            .subscribe()\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                backgroundColor: \"#1f1f1f\",\r\n                color: \"white\",\r\n                height: \"100vh\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"100vw\",\r\n            }}>\r\n                <h1>Controls</h1>\r\n                <div style={{\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    padding: \"20px\",\r\n                    borderRadius: \"10px\",\r\n                    border: \"2px solid #424242\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    width: \"fit-content\",\r\n                    alignSelf: \"center\",\r\n                }}>\r\n                    <h2 style={{\r\n                        color: \"white\",\r\n                    }}>URL Director</h2>\r\n                    <input id=\"url\" type=\"text\" placeholder=\"URL\" style={{\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#1f1f1f\",\r\n                        color: \"white\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"2px solid #424242\",\r\n                        outline: \"none\",\r\n                        fontSize: \"20px\",\r\n                    }}></input><br />\r\n                    <button onClick={broadcasturl} style={{\r\n                        padding: \"10px\",\r\n                        backgroundColor: \"#1f1f1f\",\r\n                        color: \"white\",\r\n                        borderRadius: \"10px\",\r\n                        border: \"none\",\r\n                        fontSize: \"20px\",\r\n                        marginBottom: \"20px\",\r\n                        border: \"2px solid #424242\",\r\n                        marginTop: \"20px\",\r\n                        cursor: \"pointer\",\r\n                        width: \"200px\",\r\n                        alignSelf: \"center\",\r\n                    }}>Broadcast</button>\r\n\r\n\r\n\r\n                    <div id=\"broadcastButtons\">\r\n                    </div>\r\n\r\n                </div>\r\n                <div id=\"resetButtonLocation\"></div>\r\n\r\n                <br />\r\n                <input id=\"message\" type=\"text\" placeholder=\"ActorMessage\" autoComplete=\"off\" style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    borderRadius: \"10px\",\r\n                    border: \"2px solid #424242\",\r\n                    outline: \"none\",\r\n                    fontSize: \"20px\",\r\n                    marginBottom: \"20px\",\r\n                    width: \"300px\",\r\n                    alignSelf: \"center\",\r\n                }} onSubmit={actorMessage} /><label style={{\r\n                    alignSelf: \"center\",\r\n                    marginBottom: \"10px\",\r\n                    color: \"orangered\",\r\n                }}>Must be signed in on board</label><button style={{\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    borderRadius: \"10px\",\r\n                    width: \"fit-content\",\r\n                    fontSize: \"20px\",\r\n                    marginBottom: \"20px\",\r\n                    border: \"2px solid #424242\",\r\n                    marginTop: \"0px\",\r\n                    cursor: \"pointer\",\r\n                    alignSelf: \"center\",\r\n                }} onClick={actorMessage}>Send Board Message</button>\r\n\r\n                <label for=\"canChat\">Can Chat</label><input type=\"checkbox\" id=\"canChat\" style={{\r\n                    display: \"flex\",\r\n                    width: \"3vw\",\r\n                    height: \"3vh\",\r\n                }} /><br />\r\n\r\n\r\n                <form id=\"signinform\" onSubmit={(e) => { signIn(e) }}>\r\n                    <h2 style={\r\n                        {\r\n                            color: \"red\",\r\n                        }\r\n                    }>You must be signed in to not change page</h2>\r\n                    <input type=\"email\" placeholder=\"Email\" name=\"email\" id=\"email\" /><br />\r\n                    <input type=\"password\" placeholder=\"Password\" name=\"password\" id=\"password\" /><br />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <button style={{\r\n                    display: \"none\",\r\n                    width: \"200px\",\r\n                    border: \"2px solid #424242\",\r\n                    borderRadius: \"10px\",\r\n                    backgroundColor: \"#1f1f1f\",\r\n                    color: \"white\",\r\n                    height: \"50px\",\r\n                }} id=\"signout\" onClick={() => { supabase.auth.signOut() }}>Sign out</button>\r\n\r\n                <div id=\"votes\" style={{\r\n                    position: 'absolute',\r\n                    top: '10',\r\n                    marginTop: '60px',\r\n                    width: '100vw',\r\n                    display: 'flex',\r\n                    float: 'left',\r\n                    width: 'fit-content',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    color: 'darkgrey',\r\n                }}>\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\nexport default Controls;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}