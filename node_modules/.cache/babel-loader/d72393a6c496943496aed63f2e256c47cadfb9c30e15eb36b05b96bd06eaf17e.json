{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdalb\\\\Desktop\\\\dramainteractive\\\\dramainteractive\\\\src\\\\pages\\\\Vote.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport Message from '../Components/Message';\nimport Sender from '../Components/Sender';\nimport { Route, Routes } from 'react-router-dom';\nimport { createClient } from '@supabase/supabase-js';\nimport ActButton from \"../Components/ActButton\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction Vote(props) {\n  _s();\n  const [acts, setActs] = useState([]);\n  useEffect(() => {\n    async function fetchActs() {\n      const {\n        data,\n        error\n      } = await supabase.from('acts').select(\"*\");\n      if (error) {\n        console.error(\"Error fetching acts:\", error);\n      } else {\n        setActs(data);\n      }\n    }\n    fetchActs();\n  }, []);\n  async function selectAct() {\n    const {\n      data,\n      error\n    } = await supabase.from('acts').select(\"*\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"40px\",\n        backgroundColor: \"#1f1f1f\",\n        height: \"100vh\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textDecoration: \"underline\"\n        },\n        children: \"It's up to you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Who's story are you watching next?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: acts.map(act => /*#__PURE__*/_jsxDEV(ActButton, {\n          name: act.name,\n          completed: act.completed\n        }, act.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Vote, \"3xyrCda64wqD4oFg5FxvZ4DhrMQ=\");\n_c = Vote;\nexport default Vote;\nvar _c;\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"names":["useEffect","useState","Message","Sender","Route","Routes","createClient","ActButton","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","Vote","props","_s","acts","setActs","fetchActs","data","error","from","select","console","selectAct","children","style","padding","backgroundColor","height","alignItems","color","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","map","act","name","completed","id","_c","$RefreshReg$"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/pages/Vote.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport Message from '../Components/Message';\r\nimport Sender from '../Components/Sender';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport ActButton from \"../Components/ActButton\";\r\n\r\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\r\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nfunction Vote(props) {\r\n    const [acts, setActs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchActs() {\r\n            const { data, error } = await supabase.from('acts').select(\"*\");\r\n            if (error) {\r\n                console.error(\"Error fetching acts:\", error);\r\n            } else {\r\n                setActs(data);\r\n            }\r\n        }\r\n        fetchActs();\r\n    }, []);\r\n\r\n    async function selectAct(){\r\n        const { data, error } = await supabase.from('acts').select(\"*\");\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                padding: \"40px\",\r\n                backgroundColor: \"#1f1f1f\",\r\n                height: \"100vh\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                color: \"white\",\r\n            }}>\r\n                <h1 style={{\r\n                    textDecoration: \"underline\",\r\n                }}>It's up to you</h1>\r\n                <h3>Who's story are you watching next?</h3>\r\n\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                }}>\r\n                    {acts.map((act) => (\r\n                        <ActButton key={act.id} name={act.name} completed={act.completed}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Vote;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,WAAW,GAAG,kNAAkN;AACtO,MAAMC,QAAQ,GAAGR,YAAY,CAACM,WAAW,EAAEC,WAAW,CAAC;AAEvD,SAASE,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,eAAeoB,SAASA,CAAA,EAAG;MACvB,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;MAC/D,IAAIF,KAAK,EAAE;QACPG,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD,CAAC,MAAM;QACHH,OAAO,CAACE,IAAI,CAAC;MACjB;IACJ;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeM,SAASA,CAAA,EAAE;IACtB,MAAM;MAAEL,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC;EAEnE;EAEA,oBACIf,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA;MAAKmB,KAAK,EAAE;QACRC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAE,QAAQ;QACpBD,MAAM,EAAE,OAAO;QACfE,KAAK,EAAE;MACX,CAAE;MAAAN,QAAA,gBACElB,OAAA;QAAImB,KAAK,EAAE;UACPM,cAAc,EAAE;QACpB,CAAE;QAAAP,QAAA,EAAC;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB7B,OAAA;QAAAkB,QAAA,EAAI;MAAkC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3C7B,OAAA;QAAKmB,KAAK,EAAE;UACRW,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE;QACnB,CAAE;QAAAb,QAAA,EACGT,IAAI,CAACuB,GAAG,CAAEC,GAAG,iBACVjC,OAAA,CAACF,SAAS;UAAcoC,IAAI,EAAED,GAAG,CAACC,IAAK;UAACC,SAAS,EAAEF,GAAG,CAACE;QAAU,GAAjDF,GAAG,CAACG,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4C,CACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX;AAACrB,EAAA,CA9CQF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}