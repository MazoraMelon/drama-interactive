{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdalb\\\\Desktop\\\\dramainteractive\\\\dramainteractive\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Message from './Components/Message';\nimport Sender from './Components/Sender';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('Anonymous');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Subscribe to real-time inserts\n    const channels = supabase.channel('custom-inserts').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'messages'\n    }, payload => {\n      const newMessage = {\n        message: payload.new.message,\n        sender: payload.new.sender,\n        owner: payload.new.sender === username\n      };\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }).subscribe();\n    const controls = supabase.channel('controller').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'messages'\n    }, payload => {\n      const newMessage = {\n        message: payload.new.message,\n        sender: payload.new.sender,\n        owner: payload.new.sender === username\n      };\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }).subscribe();\n    return () => {\n      // Unsubscribe from channel when component unmounts\n      channels.unsubscribe();\n    };\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'grey',\n        fontSize: '1.5rem',\n        margin: '5px'\n      },\n      onClick: () => setUsername(prompt('Enter a username')),\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start'\n      },\n      children: messages.map((msg, index) => {\n        return /*#__PURE__*/_jsxDEV(Message, {\n          message: msg.message,\n          sender: msg.sender,\n          owner: msg.sender === username\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sender, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"YNkFtRLe36J4fcCqeQszGqT5qjM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Sender","createClient","jsxDEV","_jsxDEV","Fragment","_Fragment","supabaseUrl","supabaseKey","supabase","App","_s","username","setUsername","messages","setMessages","channels","channel","on","event","schema","table","payload","newMessage","message","new","sender","owner","prevMessages","subscribe","controls","unsubscribe","children","style","color","fontSize","margin","onClick","prompt","fileName","_jsxFileName","lineNumber","columnNumber","className","display","flexDirection","alignItems","justifyContent","map","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/mdalb/Desktop/dramainteractive/dramainteractive/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\nimport Message from './Components/Message';\nimport Sender from './Components/Sender';\n\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = \"https://jftaxymlbutkjoacvtbk.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpmdGF4eW1sYnV0a2pvYWN2dGJrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTM5NjkxOTMsImV4cCI6MjAyOTU0NTE5M30.2aT1UzmiN34aKLNRUXAKwhKfnuwxMoiM3eMkHs1oyZU\";\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\n\nfunction App() {\n  const [username, setUsername] = useState('Anonymous');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    // Subscribe to real-time inserts\n    const channels = supabase.channel('custom-inserts')\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'messages' },\n        (payload) => {\n          const newMessage = {\n            message: payload.new.message,\n            sender: payload.new.sender,\n            owner: payload.new.sender === username\n          };\n          setMessages(prevMessages => [...prevMessages, newMessage]);\n        }\n      )\n      .subscribe();\n\n      const controls = supabase.channel('controller')\n      .on(\n        'postgres_changes',\n        { event: 'INSERT', schema: 'public', table: 'messages' },\n        (payload) => {\n          const newMessage = {\n            message: payload.new.message,\n            sender: payload.new.sender,\n            owner: payload.new.sender === username\n          };\n          setMessages(prevMessages => [...prevMessages, newMessage]);\n        }\n      )\n      .subscribe();\n\n    return () => {\n      // Unsubscribe from channel when component unmounts\n      channels.unsubscribe();\n    };\n  }, [username]);\n\n\n  return (\n    <>\n      <h1 style={{\n        color: 'grey',\n        fontSize: '1.5rem',\n        margin: '5px',\n      }} onClick={() => setUsername(prompt('Enter a username'))}>{username}</h1>\n      <div className=\"Chat\" style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n      }}>\n        {messages.map((msg, index) => {\n          return (\n            <Message\n              key={index}\n              message={msg.message}\n              sender={msg.sender}\n              owner={msg.sender === username}\n            />\n          );\n        })}\n      </div>\n      <Sender username={username} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}